{"version":3,"sources":["components/header.js","components/AddNote.js","components/Note.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","title","defaultProps","AddNote","type","value","this","name","onChange","handleChange","placeholder","description","onClick","handleSumit","Component","Note","e","handleRead","note","id","class","handleDelete","handleUpdate","List","list","map","key","React","App","setState","target","preventDefault","state","trim","length","some","obj","newNote","Object","assign","Date","now","handleAddNote","prev","concat","filter","renderEditForm","Update","updateObj","edit","console","log","close","read","readObj","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.983e6937.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from 'react';\r\n\r\nfunction Header(props) {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<h1>{props.title}</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nHeader.defaultProps = {\r\n\ttitle: 'My Notes',\r\n};\r\n\r\nexport default Header;\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass AddNote extends Component {\r\n\trender() {\r\n\t\t// console.log(this.props);\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={this.props.title}\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tonChange={this.props.handleChange}\r\n\t\t\t\t\tplaceholder=\"Notes Title\"\r\n\t\t\t\t></input>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={this.props.description}\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tonChange={this.props.handleChange}\r\n\t\t\t\t\tplaceholder=\"add your description here...\"\r\n\t\t\t\t></textarea>\r\n\t\t\t\t<button onClick={this.props.handleSumit}>Add Note</button>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddNote;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\n\r\nconst Note = (props) => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<span>\r\n\t\t\t\t<i\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tprops.handleRead(props.note.id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclass=\"fab fa-readme\"\r\n\t\t\t\t></i>\r\n\t\t\t\t<i\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tprops.handleDelete(props.note.id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclass=\"fas fa-trash-alt\"\r\n\t\t\t\t></i>\r\n\t\t\t\t<i\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tprops.handleUpdate(props.note.id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclass=\"far fa-edit\"\r\n\t\t\t\t></i>\r\n\t\t\t</span>\r\n\t\t\t{props.note.title}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Note;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport Note from './Note';\r\n\r\nclass List extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.props.list.map((note) => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\thandleDelete={this.props.handleDelete}\r\n\t\t\t\t\t\thandleUpdate={this.props.handleUpdate}\r\n\t\t\t\t\t\thandleRead={this.props.handleRead}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default List;\r\n","/** @format */\n\nimport React, { Component } from 'react';\nimport Header from './components/header';\nimport AddNote from './components/AddNote';\nimport List from './components/List';\nimport './App.css';\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: [],\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t\tid: '',\n\t\t\tedit: false,\n\t\t\tread: false,\n\t\t};\n\t}\n\n\thandleChange = (e) => {\n\t\t// console.log(e.target.name);\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\thandleSumit = (e) => {\n\t\te.preventDefault();\n\n\t\tlet title = this.state.title.trim();\n\t\tlet description = this.state.description.trim();\n\t\tif (title.length === 0) return;\n\t\tif (this.state.list.some((obj) => obj.title === title)) return;\n\t\tlet newNote = Object.assign({}, { title, description, id: Date.now() });\n\t\tthis.handleAddNote(newNote);\n\t\tthis.setState(() => {\n\t\t\treturn {\n\t\t\t\ttitle: '',\n\t\t\t\tdescription: '',\n\t\t\t};\n\t\t});\n\t};\n\n\thandleAddNote = (note) => {\n\t\t// console.log(option);\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tlist: prev.list.concat(note),\n\t\t\t};\n\t\t});\n\t};\n\n\thandleDelete = (id) => {\n\t\tthis.setState((prev) => ({\n\t\t\tlist: prev.list.filter((obj) => id !== obj.id),\n\t\t}));\n\t};\n\n\trenderEditForm = () => {\n\t\t// console.log(this.state);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t></input>\n\t\t\t\t<textarea\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t></textarea>\n\t\t\t\t<button onClick={this.Update}>update</button>\n\t\t\t</>\n\t\t);\n\t};\n\n\thandleUpdate = (id) => {\n\t\tlet updateObj = this.state.list.filter((obj) => obj.id === id);\n\t\t// console.log(updateObj[0]);\n\t\tthis.setState({\n\t\t\tedit: true,\n\t\t\ttitle: updateObj[0].title,\n\t\t\tdescription: updateObj[0].description,\n\t\t\tid: updateObj[0].id,\n\t\t});\n\t};\n\n\tUpdate = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log('hi');\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tlist: this.state.list.map((obj) => {\n\t\t\t\t\tif (obj.id === this.state.id) {\n\t\t\t\t\t\tobj.title = this.state.title;\n\t\t\t\t\t\tobj.description = this.state.description;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}\n\t\t\t\t\treturn obj;\n\t\t\t\t}),\n\t\t\t};\n\t\t});\n\t\tthis.setState({\n\t\t\tedit: false,\n\t\t\tid: '',\n\t\t\tdescription: '',\n\t\t\ttitle: '',\n\t\t});\n\t};\n\n\tclose = () => {\n\t\tthis.setState({ read: false });\n\t};\n\n\thandleRead = (id) => {\n\t\tthis.setState(() => {\n\t\t\treturn { read: true, id };\n\t\t});\n\t};\n\n\tread = () => {\n\t\tif (this.state.read) {\n\t\t\tlet readObj = this.state.list.filter((obj) => obj.id === this.state.id);\n\t\t\tconsole.log(readObj, this.state.read);\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Header title={readObj[0].title} />\n\t\t\t\t\t<p className=\"desc\">{readObj[0].description}</p>\n\t\t\t\t\t<button onClick={this.close}>close</button>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\t// console.log(this.state.edit);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.state.read && this.read()}\n\n\t\t\t\t\t{this.state.read === false && <Header title=\"My Notes\" />}\n\t\t\t\t\t{this.state.edit && this.renderEditForm()}\n\n\t\t\t\t\t{this.state.edit === false && this.state.read === false && (\n\t\t\t\t\t\t<AddNote\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\thandleSumit={this.handleSumit}\n\t\t\t\t\t\t\thandleAddNote={this.handleAddNote}\n\t\t\t\t\t\t\ttitle={this.state.title}\n\t\t\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.list.length > 0 &&\n\t\t\t\t\t\t\tthis.state.edit === false &&\n\t\t\t\t\t\t\tthis.state.read === false && <h1>My List</h1>}\n\t\t\t\t\t\t{this.state.edit === false && this.state.read === false && (\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\tlist={this.state.list}\n\t\t\t\t\t\t\t\thandleDelete={this.handleDelete}\n\t\t\t\t\t\t\t\thandleUpdate={this.handleUpdate}\n\t\t\t\t\t\t\t\thandleRead={this.handleRead}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}